INFO     planner time limit: 60s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 59s
INFO     translator memory limit: None
INFO     translator command line string: /opt/homebrew/opt/python@3.12/bin/python3.12 /Users/francesco/Desktop/planners/downward/builds/release/bin/translate/translate.py domain.pddl problem_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 59 rules.
Computing model... [0.010s CPU, 0.005s wall-clock]
1386 relevant atoms
892 auxiliary atoms
2278 final queue length
3632 total queue pushes
Completing instantiation... [0.010s CPU, 0.010s wall-clock]
Instantiating: [0.020s CPU, 0.017s wall-clock]
Computing fact groups...
Finding invariants...
22 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
114 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.017s wall-clock]
1336 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
118 of 118 variables necessary.
2 of 6 mutex groups necessary.
1016 of 1016 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.004s wall-clock]
Translator variables: 118
Translator derived variables: 0
Translator facts: 300
Translator goal facts: 16
Translator mutex groups: 2
Translator total mutex groups size: 36
Translator operators: 1016
Translator axioms: 0
Translator task size: 9022
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.050s CPU, 0.056s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 59s
INFO     search memory limit: None
INFO     search command line string: /Users/francesco/Desktop/planners/downward/builds/release/bin/downward --evaluator 'add=add()' --search 'lazy_greedy([add], preferred=[add])' --internal-plan-file plans/plan_lazy_greddy_add_4 < output.sas
[t=0.000169417s, 410606368 KB] reading input...
[t=0.0162631s, 410737440 KB] done reading input!
[t=0.017043s, 410877728 KB] Simplifying 2872 unary operators... done! [2852 unary operators]
[t=0.0208084s, 410877728 KB] time to simplify: 0.00376808s
[t=0.0208816s, 410877728 KB] Initializing additive heuristic...
[t=0.0209076s, 410877728 KB] Building successor generator...done!
[t=0.0211953s, 410877728 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0212s, 410877728 KB] time for successor generation creation: 0.000276375s
[t=0.021207s, 410877728 KB] Variables: 118
[t=0.0212116s, 410877728 KB] FactPairs: 300
[t=0.0212161s, 410877728 KB] Bytes per state: 20
[t=0.0212337s, 410877728 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0212666s, 410877728 KB] New best heuristic value for add(): 172
[t=0.0212854s, 410877728 KB] g=0, 1 evaluated, 0 expanded
[t=0.0212945s, 410877728 KB] Initial heuristic value for add(): 172
[t=0.0213416s, 410877728 KB] New best heuristic value for add(): 76
[t=0.0213455s, 410877728 KB] g=1, 3 evaluated, 2 expanded
[t=0.0214548s, 410877728 KB] New best heuristic value for add(): 70
[t=0.02146s, 410877728 KB] g=2, 8 evaluated, 7 expanded
[t=0.0240642s, 410877728 KB] New best heuristic value for add(): 68
[t=0.0240683s, 410877728 KB] g=6, 138 evaluated, 137 expanded
[t=0.0242803s, 410877728 KB] New best heuristic value for add(): 66
[t=0.0242844s, 410877728 KB] g=6, 148 evaluated, 147 expanded
[t=0.0266147s, 410877728 KB] New best heuristic value for add(): 64
[t=0.0266188s, 410877728 KB] g=10, 264 evaluated, 263 expanded
[t=0.0270369s, 410877728 KB] New best heuristic value for add(): 62
[t=0.0270408s, 410877728 KB] g=10, 284 evaluated, 283 expanded
[t=0.0290915s, 410877728 KB] New best heuristic value for add(): 60
[t=0.0290955s, 410877728 KB] g=14, 386 evaluated, 385 expanded
[t=0.0296198s, 410877728 KB] New best heuristic value for add(): 58
[t=0.029624s, 410877728 KB] g=14, 411 evaluated, 410 expanded
[t=0.0314973s, 410877728 KB] New best heuristic value for add(): 56
[t=0.0315012s, 410877728 KB] g=18, 504 evaluated, 503 expanded
[t=0.160223s, 410877728 KB] New best heuristic value for add(): 55
[t=0.160233s, 410877728 KB] g=20, 6883 evaluated, 6882 expanded
[t=0.160418s, 410877728 KB] New best heuristic value for add(): 54
[t=0.160425s, 410877728 KB] g=21, 6891 evaluated, 6890 expanded
[t=0.160596s, 410877728 KB] New best heuristic value for add(): 53
[t=0.160601s, 410877728 KB] g=23, 6899 evaluated, 6898 expanded
[t=0.160811s, 410877728 KB] New best heuristic value for add(): 51
[t=0.160816s, 410877728 KB] g=21, 6909 evaluated, 6908 expanded
[t=0.207474s, 410877728 KB] New best heuristic value for add(): 50
[t=0.20748s, 410877728 KB] g=29, 9183 evaluated, 9182 expanded
[t=0.222382s, 410877728 KB] New best heuristic value for add(): 49
[t=0.222386s, 410877728 KB] g=37, 9913 evaluated, 9912 expanded
[t=0.222555s, 410877728 KB] New best heuristic value for add(): 48
[t=0.222559s, 410877728 KB] g=39, 9921 evaluated, 9920 expanded
[t=0.222761s, 410877728 KB] New best heuristic value for add(): 46
[t=0.222765s, 410877728 KB] g=37, 9931 evaluated, 9930 expanded
[t=0.25377s, 410877728 KB] New best heuristic value for add(): 45
[t=0.253775s, 410877728 KB] g=45, 11449 evaluated, 11448 expanded
[t=0.268531s, 410877728 KB] New best heuristic value for add(): 44
[t=0.268536s, 410877728 KB] g=53, 12172 evaluated, 12171 expanded
[t=0.279111s, 410877728 KB] New best heuristic value for add(): 41
[t=0.279116s, 410877728 KB] g=57, 12693 evaluated, 12692 expanded
[t=0.293736s, 410877728 KB] New best heuristic value for add(): 40
[t=0.29374s, 410877728 KB] g=65, 13412 evaluated, 13411 expanded
[t=0.317582s, 410877728 KB] New best heuristic value for add(): 37
[t=0.317587s, 410877728 KB] g=70, 14586 evaluated, 14585 expanded
[t=0.318112s, 410877728 KB] New best heuristic value for add(): 36
[t=0.318115s, 410877728 KB] g=73, 14611 evaluated, 14610 expanded
[t=0.377837s, 410886944 KB] New best heuristic value for add(): 34
[t=0.37785s, 410886944 KB] g=78, 17509 evaluated, 17508 expanded
[t=0.377977s, 410886944 KB] New best heuristic value for add(): 33
[t=0.377982s, 410886944 KB] g=79, 17515 evaluated, 17514 expanded
[t=0.378121s, 410886944 KB] New best heuristic value for add(): 32
[t=0.378125s, 410886944 KB] g=80, 17521 evaluated, 17520 expanded
[t=0.378253s, 410886944 KB] New best heuristic value for add(): 31
[t=0.378257s, 410886944 KB] g=81, 17527 evaluated, 17526 expanded
[t=0.422974s, 410886944 KB] New best heuristic value for add(): 27
[t=0.422983s, 410886944 KB] g=86, 19731 evaluated, 19730 expanded
[t=0.4235s, 410886944 KB] New best heuristic value for add(): 26
[t=0.423504s, 410886944 KB] g=89, 19756 evaluated, 19755 expanded
[t=0.465087s, 410886944 KB] New best heuristic value for add(): 22
[t=0.465092s, 410886944 KB] g=94, 21799 evaluated, 21798 expanded
[t=0.465613s, 410886944 KB] New best heuristic value for add(): 21
[t=0.465617s, 410886944 KB] g=97, 21824 evaluated, 21823 expanded
[t=0.494113s, 410886944 KB] New best heuristic value for add(): 19
[t=0.494118s, 410886944 KB] g=101, 23232 evaluated, 23231 expanded
[t=0.494291s, 410886944 KB] New best heuristic value for add(): 18
[t=0.494298s, 410886944 KB] g=103, 23240 evaluated, 23239 expanded
[t=0.494322s, 410886944 KB] New best heuristic value for add(): 17
[t=0.494326s, 410886944 KB] g=104, 23241 evaluated, 23240 expanded
[t=0.494351s, 410886944 KB] New best heuristic value for add(): 16
[t=0.494354s, 410886944 KB] g=105, 23242 evaluated, 23241 expanded
[t=0.500662s, 410886944 KB] New best heuristic value for add(): 15
[t=0.500666s, 410886944 KB] g=111, 23559 evaluated, 23558 expanded
[t=0.500776s, 410886944 KB] New best heuristic value for add(): 14
[t=0.50078s, 410886944 KB] g=112, 23564 evaluated, 23563 expanded
[t=0.500882s, 410886944 KB] New best heuristic value for add(): 13
[t=0.500886s, 410886944 KB] g=113, 23569 evaluated, 23568 expanded
[t=0.502236s, 410886944 KB] New best heuristic value for add(): 12
[t=0.50224s, 410886944 KB] g=116, 23637 evaluated, 23636 expanded
[t=0.502263s, 410886944 KB] New best heuristic value for add(): 11
[t=0.502267s, 410886944 KB] g=117, 23638 evaluated, 23637 expanded
[t=0.503521s, 410886944 KB] New best heuristic value for add(): 9
[t=0.503525s, 410886944 KB] g=122, 23700 evaluated, 23699 expanded
[t=0.503587s, 410886944 KB] New best heuristic value for add(): 8
[t=0.503591s, 410886944 KB] g=123, 23703 evaluated, 23702 expanded
[t=0.503986s, 410886944 KB] New best heuristic value for add(): 7
[t=0.50399s, 410886944 KB] g=128, 23724 evaluated, 23723 expanded
[t=0.504032s, 410886944 KB] New best heuristic value for add(): 6
[t=0.504036s, 410886944 KB] g=129, 23726 evaluated, 23725 expanded
[t=0.504144s, 410886944 KB] New best heuristic value for add(): 5
[t=0.504148s, 410886944 KB] g=130, 23732 evaluated, 23731 expanded
[t=0.504204s, 410886944 KB] New best heuristic value for add(): 3
[t=0.504208s, 410886944 KB] g=131, 23735 evaluated, 23734 expanded
[t=0.504223s, 410886944 KB] New best heuristic value for add(): 2
[t=0.504227s, 410886944 KB] g=132, 23736 evaluated, 23735 expanded
[t=0.504243s, 410886944 KB] New best heuristic value for add(): 1
[t=0.504247s, 410886944 KB] g=133, 23737 evaluated, 23736 expanded
[t=0.504255s, 410886944 KB] Solution found!
[t=0.504263s, 410886944 KB] Actual search time: 0.483025s
pick_up_box rob2 box1 central_warehouse (1)
pick_up_content_at_cw rob2 box1 bolt (1)
move rob2 central_warehouse loc3 (1)
put_down_content rob2 box1 bolt loc3 wor3_1 (1)
move rob2 loc3 central_warehouse (1)
pick_up_content_at_cw rob2 box1 nut (1)
move rob2 central_warehouse loc4 (1)
put_down_content rob2 box1 nut loc4 wor4_1 (1)
move rob2 loc4 central_warehouse (1)
pick_up_content_at_cw rob2 box1 tool (1)
move rob2 central_warehouse loc1 (1)
put_down_content rob2 box1 tool loc1 wor1_1 (1)
move rob2 loc1 central_warehouse (1)
pick_up_content_at_cw rob2 box1 valve (1)
move rob2 central_warehouse loc2 (1)
put_down_content rob2 box1 valve loc2 wor2_1 (1)
move rob2 loc2 central_warehouse (1)
pick_up_content_at_cw rob2 box1 bolt (1)
pick_up_box rob1 box2 central_warehouse (1)
move rob2 central_warehouse loc2 (1)
pick_up_content_at_cw rob1 box2 gears (1)
put_down_content rob2 box1 bolt loc2 wor2_1 (1)
pick_up_content rob2 box1 valve loc2 wor2_1 (1)
move rob2 loc2 loc8 (1)
put_down_content rob2 box1 valve loc8 wor8_1 (1)
move rob2 loc8 loc2 (1)
pick_up_content rob2 box1 bolt loc2 wor2_1 (1)
move rob2 loc2 central_warehouse (1)
move rob2 central_warehouse loc4 (1)
put_down_content_at_cw rob1 box2 gears (1)
pick_up_content_at_cw rob1 box2 valve (1)
move rob2 loc4 central_warehouse (1)
move rob1 central_warehouse loc2 (1)
put_down_content rob1 box2 valve loc2 wor2_1 (1)
move rob1 loc2 central_warehouse (1)
move rob2 central_warehouse loc4 (1)
pick_up_content_at_cw rob1 box2 gears (1)
put_down_content rob2 box1 bolt loc4 wor4_1 (1)
pick_up_content rob2 box1 nut loc4 wor4_1 (1)
move rob2 loc4 loc16 (1)
put_down_content rob2 box1 nut loc16 wor16_1 (1)
move rob2 loc16 loc4 (1)
pick_up_content rob2 box1 bolt loc4 wor4_1 (1)
move rob2 loc4 central_warehouse (1)
move rob1 central_warehouse loc1 (1)
put_down_content_at_cw rob2 box1 bolt (1)
pick_up_content_at_cw rob2 box1 screw (1)
move rob1 loc1 central_warehouse (1)
move rob2 central_warehouse loc1 (1)
put_down_content_at_cw rob1 box2 gears (1)
pick_up_content_at_cw rob1 box2 nut (1)
move rob2 loc1 central_warehouse (1)
move rob1 central_warehouse loc4 (1)
put_down_content rob1 box2 nut loc4 wor4_1 (1)
move rob1 loc4 central_warehouse (1)
move rob2 central_warehouse loc1 (1)
pick_up_content_at_cw rob1 box2 bolt (1)
put_down_content rob2 box1 screw loc1 wor1_1 (1)
pick_up_content rob2 box1 tool loc1 wor1_1 (1)
move rob2 loc1 loc7 (1)
put_down_content rob2 box1 tool loc7 wor7_1 (1)
move rob2 loc7 loc1 (1)
pick_up_content rob2 box1 screw loc1 wor1_1 (1)
put_down_content_at_cw rob1 box2 bolt (1)
pick_up_content_at_cw rob1 box2 tool (1)
move rob2 loc1 central_warehouse (1)
move rob1 central_warehouse loc1 (1)
put_down_content rob1 box2 tool loc1 wor1_1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box2 bolt (1)
move rob1 central_warehouse loc2 (1)
move rob1 loc2 loc9 (1)
put_down_content rob1 box2 bolt loc9 wor9_1 (1)
move rob2 central_warehouse loc3 (1)
move rob1 loc9 loc2 (1)
move rob2 loc3 central_warehouse (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box2 bolt (1)
move rob1 central_warehouse loc4 (1)
move rob1 loc4 loc15 (1)
put_down_content rob1 box2 bolt loc15 wor15_1 (1)
move rob2 central_warehouse loc3 (1)
move rob1 loc15 loc4 (1)
move rob2 loc3 central_warehouse (1)
move rob1 loc4 central_warehouse (1)
pick_up_content_at_cw rob1 box2 tool (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc13 (1)
put_down_content rob1 box2 tool loc13 wor13_1 (1)
move rob2 central_warehouse loc1 (1)
move rob1 loc13 loc3 (1)
move rob2 loc1 central_warehouse (1)
move rob1 loc3 central_warehouse (1)
pick_up_content_at_cw rob1 box2 gears (1)
move rob2 central_warehouse loc1 (1)
move rob2 loc1 loc5 (1)
put_down_content rob2 box1 screw loc5 wor5_1 (1)
move rob2 loc5 loc1 (1)
move rob1 central_warehouse loc3 (1)
move rob2 loc1 central_warehouse (1)
pick_up_content_at_cw rob2 box1 nut (1)
move rob2 central_warehouse loc2 (1)
move rob1 loc3 central_warehouse (1)
move rob2 loc2 loc10 (1)
put_down_content rob2 box1 nut loc10 wor10_1 (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc11 (1)
move rob2 loc10 loc2 (1)
move rob2 loc2 central_warehouse (1)
pick_up_content_at_cw rob2 box1 gears (1)
move rob1 loc11 loc3 (1)
put_down_content_at_cw rob2 box1 gears (1)
pick_up_content_at_cw rob2 box1 screw (1)
move rob1 loc3 central_warehouse (1)
move rob2 central_warehouse loc3 (1)
move rob2 loc3 loc11 (1)
put_down_content rob2 box1 screw loc11 wor11_1 (1)
move rob1 central_warehouse loc1 (1)
move rob1 loc1 loc6 (1)
move rob2 loc11 loc3 (1)
move rob2 loc3 central_warehouse (1)
pick_up_content_at_cw rob2 box1 gears (1)
put_down_content rob1 box2 gears loc6 wor6_1 (1)
put_down_content_at_cw rob2 box1 gears (1)
pick_up_content_at_cw rob2 box1 valve (1)
move rob2 central_warehouse loc4 (1)
move rob2 loc4 loc14 (1)
put_down_content rob2 box1 valve loc14 wor14_1 (1)
move rob1 loc6 loc1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box2 gears (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc12 (1)
put_down_content rob1 box2 gears loc12 wor12_1 (1)
[t=0.504267s, 410886944 KB] Plan length: 134 step(s).
[t=0.504267s, 410886944 KB] Plan cost: 134
[t=0.504267s, 410886944 KB] Expanded 23737 state(s).
[t=0.504267s, 410886944 KB] Reopened 0 state(s).
[t=0.504267s, 410886944 KB] Evaluated 23738 state(s).
[t=0.504267s, 410886944 KB] Evaluations: 23738
[t=0.504267s, 410886944 KB] Generated 242096 state(s).
[t=0.504267s, 410886944 KB] Dead ends: 0 state(s).
[t=0.504267s, 410886944 KB] Number of registered states: 23738
[t=0.504267s, 410886944 KB] Int hash set load factor: 23738/32768 = 0.724426
[t=0.504267s, 410886944 KB] Int hash set resizes: 15
[t=0.504267s, 410886944 KB] Search time: 0.483033s
[t=0.504267s, 410886944 KB] Total time: 0.504267s
Solution found.
Peak memory: 410886944 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.61s
