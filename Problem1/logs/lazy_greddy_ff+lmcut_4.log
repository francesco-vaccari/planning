INFO     planner time limit: 60s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 59s
INFO     translator memory limit: None
INFO     translator command line string: /opt/homebrew/opt/python@3.12/bin/python3.12 /Users/francesco/Desktop/planners/downward/builds/release/bin/translate/translate.py domain.pddl problem_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 59 rules.
Computing model... [0.010s CPU, 0.005s wall-clock]
1386 relevant atoms
892 auxiliary atoms
2278 final queue length
3632 total queue pushes
Completing instantiation... [0.010s CPU, 0.010s wall-clock]
Instantiating: [0.020s CPU, 0.017s wall-clock]
Computing fact groups...
Finding invariants...
22 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
114 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.017s wall-clock]
1336 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
118 of 118 variables necessary.
2 of 6 mutex groups necessary.
1016 of 1016 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.004s wall-clock]
Translator variables: 118
Translator derived variables: 0
Translator facts: 300
Translator goal facts: 16
Translator mutex groups: 2
Translator total mutex groups size: 36
Translator operators: 1016
Translator axioms: 0
Translator task size: 9022
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.050s CPU, 0.055s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 59s
INFO     search memory limit: None
INFO     search command line string: /Users/francesco/Desktop/planners/downward/builds/release/bin/downward --evaluator 'ff=ff()' --evaluator 'lmcut=lmcut()' --search 'lazy_greedy([ff, lmcut], preferred=[ff, lmcut])' --internal-plan-file plans/plan_lazy_greddy_ff+lmcut_4 < output.sas
[t=0.000149709s, 410597152 KB] reading input...
[t=0.0162054s, 410728224 KB] done reading input!
[t=0.0169795s, 410728224 KB] Simplifying 2872 unary operators... done! [2852 unary operators]
[t=0.0206651s, 410728224 KB] time to simplify: 0.00368829s
[t=0.0207408s, 410728224 KB] Initializing additive heuristic...
[t=0.0207465s, 410728224 KB] Initializing FF heuristic...
[t=0.0210217s, 410728224 KB] Initializing landmark cut heuristic...
[t=0.021049s, 410728224 KB] Building successor generator...done!
[t=0.0213378s, 410728224 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0213422s, 410728224 KB] time for successor generation creation: 0.000278416s
[t=0.0213493s, 410728224 KB] Variables: 118
[t=0.0213539s, 410728224 KB] FactPairs: 300
[t=0.0213664s, 410728224 KB] Bytes per state: 20
[t=0.0213835s, 410728224 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0217169s, 410728224 KB] New best heuristic value for lmcut(): 34
[t=0.0217213s, 410728224 KB] New best heuristic value for ff(): 40
[t=0.0217248s, 410728224 KB] g=0, 1 evaluated, 0 expanded
[t=0.0217357s, 410728224 KB] Initial heuristic value for lmcut(): 34
[t=0.0217394s, 410728224 KB] Initial heuristic value for ff(): 40
[t=0.0220684s, 410728224 KB] New best heuristic value for lmcut(): 33
[t=0.0220724s, 410728224 KB] New best heuristic value for ff(): 39
[t=0.0220757s, 410728224 KB] g=1, 2 evaluated, 1 expanded
[t=0.0236662s, 410728224 KB] New best heuristic value for lmcut(): 28
[t=0.0236715s, 410728224 KB] New best heuristic value for ff(): 38
[t=0.023675s, 410728224 KB] g=2, 7 evaluated, 6 expanded
[t=0.0263617s, 410728224 KB] New best heuristic value for lmcut(): 27
[t=0.026366s, 410728224 KB] g=3, 16 evaluated, 15 expanded
[t=0.0266723s, 410728224 KB] New best heuristic value for ff(): 37
[t=0.0266764s, 410728224 KB] g=4, 17 evaluated, 16 expanded
[t=0.0304964s, 410728224 KB] New best heuristic value for lmcut(): 25
[t=0.0305023s, 410728224 KB] g=6, 29 evaluated, 28 expanded
[t=0.035042s, 410728224 KB] New best heuristic value for ff(): 36
[t=0.0350465s, 410728224 KB] g=8, 44 evaluated, 43 expanded
[t=0.0450145s, 410728224 KB] New best heuristic value for ff(): 35
[t=0.0450203s, 410728224 KB] g=10, 76 evaluated, 75 expanded
[t=0.0470892s, 410728224 KB] New best heuristic value for lmcut(): 24
[t=0.0470948s, 410728224 KB] g=12, 83 evaluated, 82 expanded
[t=0.0507839s, 410728224 KB] New best heuristic value for ff(): 34
[t=0.0507896s, 410728224 KB] g=14, 96 evaluated, 95 expanded
[t=0.0607665s, 410728224 KB] New best heuristic value for ff(): 33
[t=0.0607722s, 410728224 KB] g=18, 129 evaluated, 128 expanded
[t=0.0728783s, 410728224 KB] New best heuristic value for ff(): 32
[t=0.072883s, 410728224 KB] g=23, 171 evaluated, 170 expanded
[t=0.074863s, 410728224 KB] New best heuristic value for lmcut(): 23
[t=0.0748691s, 410728224 KB] New best heuristic value for ff(): 31
[t=0.0748724s, 410728224 KB] g=26, 178 evaluated, 177 expanded
[t=0.0759593s, 410728224 KB] New best heuristic value for lmcut(): 22
[t=0.0759646s, 410728224 KB] g=27, 182 evaluated, 181 expanded
[t=0.0821842s, 410728224 KB] New best heuristic value for ff(): 30
[t=0.0821901s, 410728224 KB] g=28, 205 evaluated, 204 expanded
[t=0.0872568s, 410728224 KB] New best heuristic value for lmcut(): 21
[t=0.087263s, 410728224 KB] g=31, 224 evaluated, 223 expanded
[t=0.0875126s, 410728224 KB] New best heuristic value for ff(): 29
[t=0.0875183s, 410728224 KB] g=32, 225 evaluated, 224 expanded
[t=0.0890738s, 410728224 KB] New best heuristic value for lmcut(): 20
[t=0.0890795s, 410728224 KB] g=33, 231 evaluated, 230 expanded
[t=0.100505s, 410728224 KB] New best heuristic value for ff(): 28
[t=0.100531s, 410728224 KB] g=34, 274 evaluated, 273 expanded
[t=0.10413s, 410746656 KB] New best heuristic value for lmcut(): 19
[t=0.104143s, 410746656 KB] g=37, 287 evaluated, 286 expanded
[t=0.110903s, 410746656 KB] New best heuristic value for ff(): 27
[t=0.110913s, 410746656 KB] g=39, 313 evaluated, 312 expanded
[t=0.111976s, 410746656 KB] New best heuristic value for lmcut(): 18
[t=0.111988s, 410746656 KB] New best heuristic value for ff(): 25
[t=0.111993s, 410746656 KB] g=41, 317 evaluated, 316 expanded
[t=0.112155s, 410746656 KB] New best heuristic value for lmcut(): 11
[t=0.11216s, 410746656 KB] g=42, 318 evaluated, 317 expanded
[t=0.124669s, 410746656 KB] New best heuristic value for ff(): 24
[t=0.124686s, 410746656 KB] g=45, 370 evaluated, 369 expanded
[t=0.125633s, 410746656 KB] New best heuristic value for ff(): 22
[t=0.125639s, 410746656 KB] g=47, 374 evaluated, 373 expanded
[t=0.125791s, 410746656 KB] New best heuristic value for lmcut(): 10
[t=0.125796s, 410746656 KB] g=48, 375 evaluated, 374 expanded
[t=0.136956s, 410746656 KB] New best heuristic value for ff(): 21
[t=0.136969s, 410746656 KB] g=51, 426 evaluated, 425 expanded
[t=0.138635s, 410746656 KB] New best heuristic value for lmcut(): 9
[t=0.138641s, 410746656 KB] g=54, 434 evaluated, 433 expanded
[t=0.139065s, 410746656 KB] New best heuristic value for ff(): 20
[t=0.13907s, 410746656 KB] g=55, 436 evaluated, 435 expanded
[t=0.148411s, 410746656 KB] New best heuristic value for ff(): 19
[t=0.148417s, 410746656 KB] g=57, 482 evaluated, 481 expanded
[t=0.149203s, 410746656 KB] New best heuristic value for ff(): 18
[t=0.149207s, 410746656 KB] g=59, 486 evaluated, 485 expanded
[t=0.149476s, 410746656 KB] New best heuristic value for lmcut(): 8
[t=0.14948s, 410746656 KB] g=60, 488 evaluated, 487 expanded
[t=0.149682s, 410746656 KB] New best heuristic value for ff(): 17
[t=0.149686s, 410746656 KB] g=61, 489 evaluated, 488 expanded
[t=0.1568s, 410746656 KB] New best heuristic value for ff(): 16
[t=0.156807s, 410746656 KB] g=63, 527 evaluated, 526 expanded
[t=0.158196s, 410746656 KB] New best heuristic value for lmcut(): 7
[t=0.1582s, 410746656 KB] New best heuristic value for ff(): 15
[t=0.158203s, 410746656 KB] g=66, 535 evaluated, 534 expanded
[t=0.158375s, 410746656 KB] New best heuristic value for ff(): 14
[t=0.158379s, 410746656 KB] g=67, 536 evaluated, 535 expanded
[t=0.163546s, 410746656 KB] New best heuristic value for ff(): 13
[t=0.16355s, 410746656 KB] g=69, 567 evaluated, 566 expanded
[t=0.164336s, 410746656 KB] New best heuristic value for ff(): 12
[t=0.16434s, 410746656 KB] g=71, 572 evaluated, 571 expanded
[t=0.164632s, 410746656 KB] New best heuristic value for lmcut(): 6
[t=0.164637s, 410746656 KB] g=72, 574 evaluated, 573 expanded
[t=0.164792s, 410746656 KB] New best heuristic value for ff(): 11
[t=0.164797s, 410746656 KB] g=73, 575 evaluated, 574 expanded
[t=0.168744s, 410746656 KB] New best heuristic value for ff(): 10
[t=0.168749s, 410746656 KB] g=75, 602 evaluated, 601 expanded
[t=0.169478s, 410746656 KB] New best heuristic value for ff(): 9
[t=0.169483s, 410746656 KB] g=77, 607 evaluated, 606 expanded
[t=0.169732s, 410746656 KB] New best heuristic value for lmcut(): 5
[t=0.169737s, 410746656 KB] New best heuristic value for ff(): 8
[t=0.16974s, 410746656 KB] g=78, 609 evaluated, 608 expanded
[t=0.169867s, 410746656 KB] New best heuristic value for ff(): 7
[t=0.169871s, 410746656 KB] g=79, 610 evaluated, 609 expanded
[t=0.170414s, 410746656 KB] New best heuristic value for ff(): 6
[t=0.170419s, 410746656 KB] g=79, 615 evaluated, 614 expanded
[t=0.171148s, 410746656 KB] New best heuristic value for lmcut(): 4
[t=0.171152s, 410746656 KB] g=82, 622 evaluated, 621 expanded
[t=0.171262s, 410746656 KB] New best heuristic value for ff(): 5
[t=0.171269s, 410746656 KB] g=83, 623 evaluated, 622 expanded
[t=0.171703s, 410746656 KB] New best heuristic value for lmcut(): 3
[t=0.171708s, 410746656 KB] New best heuristic value for ff(): 3
[t=0.171711s, 410746656 KB] g=85, 628 evaluated, 627 expanded
[t=0.171765s, 410746656 KB] New best heuristic value for lmcut(): 2
[t=0.171769s, 410746656 KB] New best heuristic value for ff(): 2
[t=0.171773s, 410746656 KB] g=86, 629 evaluated, 628 expanded
[t=0.171811s, 410746656 KB] New best heuristic value for lmcut(): 1
[t=0.171815s, 410746656 KB] New best heuristic value for ff(): 1
[t=0.171818s, 410746656 KB] g=87, 630 evaluated, 629 expanded
[t=0.17184s, 410746656 KB] Solution found!
[t=0.171846s, 410746656 KB] Actual search time: 0.15046s
move rob2 central_warehouse loc1 (1)
pick_up_box rob1 box1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 tool (1)
move rob1 central_warehouse loc1 (1)
move rob1 loc1 loc7 (1)
put_down_content rob1 box1 tool loc7 wor7_1 (1)
move rob1 loc7 loc1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 tool (1)
move rob1 central_warehouse loc1 (1)
put_down_content rob1 box1 tool loc1 wor1_1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 valve (1)
move rob1 central_warehouse loc2 (1)
put_down_content rob1 box1 valve loc2 wor2_1 (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box1 bolt (1)
move rob1 central_warehouse loc3 (1)
put_down_content rob1 box1 bolt loc3 wor3_1 (1)
move rob1 loc3 central_warehouse (1)
pick_up_content_at_cw rob1 box1 bolt (1)
move rob1 central_warehouse loc2 (1)
move rob1 loc2 loc9 (1)
put_down_content rob1 box1 bolt loc9 wor9_1 (1)
move rob1 loc9 loc2 (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box1 nut (1)
move rob1 central_warehouse loc4 (1)
move rob1 loc4 loc16 (1)
put_down_content rob1 box1 nut loc16 wor16_1 (1)
move rob1 loc16 loc4 (1)
move rob1 loc4 central_warehouse (1)
pick_up_content_at_cw rob1 box1 nut (1)
move rob1 central_warehouse loc4 (1)
put_down_content rob1 box1 nut loc4 wor4_1 (1)
move rob1 loc4 central_warehouse (1)
pick_up_content_at_cw rob1 box1 bolt (1)
move rob1 central_warehouse loc4 (1)
move rob1 loc4 loc15 (1)
put_down_content rob1 box1 bolt loc15 wor15_1 (1)
move rob1 loc15 loc4 (1)
move rob1 loc4 central_warehouse (1)
pick_up_content_at_cw rob1 box1 nut (1)
move rob1 central_warehouse loc2 (1)
move rob1 loc2 loc10 (1)
put_down_content rob1 box1 nut loc10 wor10_1 (1)
move rob1 loc10 loc2 (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box1 gears (1)
move rob1 central_warehouse loc1 (1)
move rob1 loc1 loc6 (1)
put_down_content rob1 box1 gears loc6 wor6_1 (1)
move rob1 loc6 loc1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 gears (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc12 (1)
put_down_content rob1 box1 gears loc12 wor12_1 (1)
move rob1 loc12 loc3 (1)
move rob1 loc3 central_warehouse (1)
pick_up_content_at_cw rob1 box1 screw (1)
move rob1 central_warehouse loc1 (1)
move rob1 loc1 loc5 (1)
put_down_content rob1 box1 screw loc5 wor5_1 (1)
move rob1 loc5 loc1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 screw (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc11 (1)
put_down_content rob1 box1 screw loc11 wor11_1 (1)
move rob1 loc11 loc3 (1)
move rob1 loc3 central_warehouse (1)
pick_up_content_at_cw rob1 box1 tool (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc13 (1)
put_down_content rob1 box1 tool loc13 wor13_1 (1)
move rob1 loc13 loc3 (1)
move rob1 loc3 central_warehouse (1)
pick_up_content_at_cw rob1 box1 valve (1)
move rob1 central_warehouse loc2 (1)
move rob1 loc2 loc8 (1)
put_down_content rob1 box1 valve loc8 wor8_1 (1)
move rob1 loc8 loc2 (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box1 valve (1)
move rob1 central_warehouse loc4 (1)
move rob1 loc4 loc14 (1)
put_down_content rob1 box1 valve loc14 wor14_1 (1)
[t=0.17185s, 410746656 KB] Plan length: 88 step(s).
[t=0.17185s, 410746656 KB] Plan cost: 88
[t=0.17185s, 410746656 KB] Expanded 630 state(s).
[t=0.17185s, 410746656 KB] Reopened 0 state(s).
[t=0.17185s, 410746656 KB] Evaluated 631 state(s).
[t=0.17185s, 410746656 KB] Evaluations: 1262
[t=0.17185s, 410746656 KB] Generated 5930 state(s).
[t=0.17185s, 410746656 KB] Dead ends: 0 state(s).
[t=0.17185s, 410746656 KB] Number of registered states: 631
[t=0.17185s, 410746656 KB] Int hash set load factor: 631/1024 = 0.616211
[t=0.17185s, 410746656 KB] Int hash set resizes: 10
[t=0.17185s, 410746656 KB] Search time: 0.150467s
[t=0.17185s, 410746656 KB] Total time: 0.17185s
Solution found.
Peak memory: 410746656 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
