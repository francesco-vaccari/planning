INFO     planner time limit: 60s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 59s
INFO     translator memory limit: None
INFO     translator command line string: /opt/homebrew/opt/python@3.12/bin/python3.12 /Users/francesco/Desktop/planners/downward/builds/release/bin/translate/translate.py domain.pddl problem_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 59 rules.
Computing model... [0.010s CPU, 0.003s wall-clock]
855 relevant atoms
671 auxiliary atoms
1526 final queue length
2131 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.010s CPU, 0.010s wall-clock]
Computing fact groups...
Finding invariants...
22 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
113 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.008s wall-clock]
668 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
116 of 116 variables necessary.
2 of 5 mutex groups necessary.
508 of 508 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.003s wall-clock]
Translator variables: 116
Translator derived variables: 0
Translator facts: 279
Translator goal facts: 16
Translator mutex groups: 2
Translator total mutex groups size: 36
Translator operators: 508
Translator axioms: 0
Translator task size: 4723
warning: could not determine peak memory
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.030s CPU, 0.032s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 59s
INFO     search memory limit: None
INFO     search command line string: /Users/francesco/Desktop/planners/downward/builds/release/bin/downward --evaluator 'ff=ff()' --evaluator 'lmcut=lmcut()' --search 'eager_greedy([ff, lmcut], preferred=[ff, lmcut])' --internal-plan-file plans/plan_eager_greddy_ff+lmcut_3 < output.sas
[t=0.000146833s, 410597152 KB] reading input...
[t=0.00868604s, 410728224 KB] done reading input!
[t=0.00942221s, 410868512 KB] Simplifying 1436 unary operators... done! [1426 unary operators]
[t=0.0112036s, 410868512 KB] time to simplify: 0.00178371s
[t=0.0112531s, 410868512 KB] Initializing additive heuristic...
[t=0.0112593s, 410868512 KB] Initializing FF heuristic...
[t=0.0114184s, 410868512 KB] Initializing landmark cut heuristic...
[t=0.0114433s, 410868512 KB] Building successor generator...done!
[t=0.0115974s, 410868512 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0116022s, 410868512 KB] time for successor generation creation: 0.000144s
[t=0.0116088s, 410868512 KB] Variables: 116
[t=0.0116133s, 410868512 KB] FactPairs: 279
[t=0.0116288s, 410868512 KB] Bytes per state: 16
[t=0.0116424s, 410868512 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.011835s, 410868512 KB] New best heuristic value for lmcut(): 34
[t=0.0118395s, 410868512 KB] New best heuristic value for ff(): 39
[t=0.011843s, 410868512 KB] g=0, 1 evaluated, 0 expanded
[t=0.011849s, 410868512 KB] Initial heuristic value for lmcut(): 34
[t=0.0118526s, 410868512 KB] Initial heuristic value for ff(): 39
[t=0.0118562s, 410868512 KB] pruning method: none
[t=0.0128616s, 410868512 KB] New best heuristic value for lmcut(): 30
[t=0.0128658s, 410868512 KB] New best heuristic value for ff(): 38
[t=0.0128692s, 410868512 KB] g=1, 6 evaluated, 1 expanded
[t=0.013978s, 410868512 KB] New best heuristic value for lmcut(): 29
[t=0.0139827s, 410868512 KB] g=2, 12 evaluated, 2 expanded
[t=0.0154319s, 410868512 KB] New best heuristic value for ff(): 37
[t=0.0154364s, 410868512 KB] g=3, 20 evaluated, 3 expanded
[t=0.0157453s, 410868512 KB] New best heuristic value for lmcut(): 27
[t=0.0157492s, 410868512 KB] g=3, 22 evaluated, 3 expanded
[t=0.0174925s, 410868512 KB] New best heuristic value for lmcut(): 25
[t=0.0174966s, 410868512 KB] g=4, 31 evaluated, 5 expanded
[t=0.0304738s, 410868512 KB] New best heuristic value for ff(): 36
[t=0.030479s, 410868512 KB] g=7, 95 evaluated, 27 expanded
[t=0.0318574s, 410868512 KB] New best heuristic value for lmcut(): 23
[t=0.0318615s, 410868512 KB] g=9, 102 evaluated, 29 expanded
[t=0.0324637s, 410868512 KB] New best heuristic value for lmcut(): 21
[t=0.0324676s, 410868512 KB] g=9, 106 evaluated, 29 expanded
[t=0.045913s, 410868512 KB] New best heuristic value for ff(): 35
[t=0.0459181s, 410868512 KB] g=11, 178 evaluated, 49 expanded
[t=0.0565483s, 410868512 KB] New best heuristic value for ff(): 34
[t=0.0565528s, 410868512 KB] g=13, 237 evaluated, 63 expanded
[t=0.070163s, 410868512 KB] New best heuristic value for ff(): 33
[t=0.070169s, 410868512 KB] g=17, 307 evaluated, 88 expanded
[t=0.0782046s, 410868512 KB] New best heuristic value for ff(): 32
[t=0.0782087s, 410868512 KB] g=21, 346 evaluated, 106 expanded
[t=0.088324s, 410868512 KB] New best heuristic value for ff(): 31
[t=0.088328s, 410868512 KB] g=24, 401 evaluated, 123 expanded
[t=0.0907817s, 410868512 KB] New best heuristic value for ff(): 29
[t=0.0907857s, 410868512 KB] g=27, 414 evaluated, 128 expanded
[t=0.0968676s, 410868512 KB] New best heuristic value for ff(): 28
[t=0.0968716s, 410868512 KB] g=29, 452 evaluated, 137 expanded
[t=0.0988517s, 410868512 KB] New best heuristic value for lmcut(): 19
[t=0.0988568s, 410868512 KB] g=30, 465 evaluated, 139 expanded
[t=0.0989789s, 410868512 KB] New best heuristic value for lmcut(): 17
[t=0.0989829s, 410868512 KB] g=30, 466 evaluated, 139 expanded
[t=0.115595s, 410877728 KB] New best heuristic value for ff(): 27
[t=0.115607s, 410877728 KB] g=33, 576 evaluated, 161 expanded
[t=0.124902s, 410877728 KB] New best heuristic value for ff(): 26
[t=0.124908s, 410877728 KB] g=37, 632 evaluated, 178 expanded
[t=0.135314s, 410877728 KB] New best heuristic value for lmcut(): 16
[t=0.13532s, 410877728 KB] g=37, 706 evaluated, 191 expanded
[t=0.13711s, 410877728 KB] New best heuristic value for ff(): 25
[t=0.137115s, 410877728 KB] g=39, 718 evaluated, 194 expanded
[t=0.13746s, 410877728 KB] New best heuristic value for lmcut(): 14
[t=0.137464s, 410877728 KB] g=39, 721 evaluated, 194 expanded
[t=0.141961s, 410877728 KB] New best heuristic value for ff(): 23
[t=0.141966s, 410877728 KB] g=42, 750 evaluated, 203 expanded
[t=0.144734s, 410877728 KB] New best heuristic value for ff(): 22
[t=0.144738s, 410877728 KB] g=45, 769 evaluated, 209 expanded
[t=0.149604s, 410877728 KB] New best heuristic value for lmcut(): 12
[t=0.149608s, 410877728 KB] g=49, 806 evaluated, 215 expanded
[t=0.157953s, 410877728 KB] New best heuristic value for ff(): 21
[t=0.157957s, 410877728 KB] g=50, 865 evaluated, 234 expanded
[t=0.159599s, 410877728 KB] New best heuristic value for ff(): 19
[t=0.159603s, 410877728 KB] g=53, 875 evaluated, 239 expanded
[t=0.163296s, 410877728 KB] New best heuristic value for lmcut(): 11
[t=0.163301s, 410877728 KB] g=55, 905 evaluated, 245 expanded
[t=0.172433s, 410877728 KB] New best heuristic value for ff(): 18
[t=0.172438s, 410877728 KB] g=56, 974 evaluated, 269 expanded
[t=0.174146s, 410877728 KB] New best heuristic value for ff(): 17
[t=0.17415s, 410877728 KB] g=58, 988 evaluated, 273 expanded
[t=0.17451s, 410877728 KB] New best heuristic value for lmcut(): 9
[t=0.174514s, 410877728 KB] g=59, 990 evaluated, 275 expanded
[t=0.175516s, 410877728 KB] New best heuristic value for ff(): 16
[t=0.17552s, 410877728 KB] g=60, 1000 evaluated, 276 expanded
[t=0.177188s, 410877728 KB] New best heuristic value for ff(): 15
[t=0.177192s, 410877728 KB] g=62, 1016 evaluated, 279 expanded
[t=0.182177s, 410877728 KB] New best heuristic value for ff(): 14
[t=0.182181s, 410877728 KB] g=66, 1061 evaluated, 292 expanded
[t=0.183003s, 410877728 KB] New best heuristic value for lmcut(): 8
[t=0.183007s, 410877728 KB] g=67, 1070 evaluated, 293 expanded
[t=0.186973s, 410877728 KB] New best heuristic value for ff(): 13
[t=0.186977s, 410877728 KB] g=68, 1108 evaluated, 303 expanded
[t=0.187993s, 410877728 KB] New best heuristic value for ff(): 12
[t=0.187997s, 410877728 KB] g=70, 1117 evaluated, 306 expanded
[t=0.188225s, 410877728 KB] New best heuristic value for lmcut(): 7
[t=0.188229s, 410877728 KB] g=71, 1119 evaluated, 307 expanded
[t=0.189238s, 410877728 KB] New best heuristic value for ff(): 11
[t=0.189242s, 410877728 KB] g=72, 1131 evaluated, 308 expanded
[t=0.189822s, 410877728 KB] New best heuristic value for lmcut(): 6
[t=0.189826s, 410877728 KB] g=73, 1138 evaluated, 309 expanded
[t=0.191394s, 410877728 KB] New best heuristic value for ff(): 10
[t=0.191398s, 410877728 KB] g=74, 1155 evaluated, 314 expanded
[t=0.198355s, 410877728 KB] New best heuristic value for ff(): 9
[t=0.198359s, 410877728 KB] g=76, 1228 evaluated, 336 expanded
[t=0.199276s, 410877728 KB] New best heuristic value for ff(): 8
[t=0.19928s, 410877728 KB] g=77, 1238 evaluated, 339 expanded
[t=0.200114s, 410877728 KB] New best heuristic value for ff(): 6
[t=0.200118s, 410877728 KB] g=78, 1250 evaluated, 340 expanded
[t=0.200347s, 410877728 KB] New best heuristic value for lmcut(): 5
[t=0.200351s, 410877728 KB] g=79, 1253 evaluated, 341 expanded
[t=0.202546s, 410877728 KB] New best heuristic value for lmcut(): 4
[t=0.20255s, 410877728 KB] New best heuristic value for ff(): 5
[t=0.202553s, 410877728 KB] g=83, 1284 evaluated, 349 expanded
[t=0.203193s, 410877728 KB] New best heuristic value for lmcut(): 3
[t=0.203197s, 410877728 KB] New best heuristic value for ff(): 3
[t=0.2032s, 410877728 KB] g=84, 1296 evaluated, 350 expanded
[t=0.203439s, 410877728 KB] New best heuristic value for lmcut(): 2
[t=0.203443s, 410877728 KB] New best heuristic value for ff(): 2
[t=0.203446s, 410877728 KB] g=85, 1301 evaluated, 351 expanded
[t=0.203577s, 410877728 KB] New best heuristic value for lmcut(): 1
[t=0.203583s, 410877728 KB] New best heuristic value for ff(): 1
[t=0.203586s, 410877728 KB] g=86, 1304 evaluated, 352 expanded
[t=0.20378s, 410877728 KB] New best heuristic value for lmcut(): 0
[t=0.203784s, 410877728 KB] New best heuristic value for ff(): 0
[t=0.203787s, 410877728 KB] g=87, 1310 evaluated, 353 expanded
[t=0.203791s, 410877728 KB] Solution found!
[t=0.203798s, 410877728 KB] Actual search time: 0.191939s
pick_up_box rob1 box1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 bolt (1)
move rob1 central_warehouse loc3 (1)
put_down_content rob1 box1 bolt loc3 wor3_1 (1)
move rob1 loc3 central_warehouse (1)
pick_up_content_at_cw rob1 box1 nut (1)
move rob1 central_warehouse loc4 (1)
move rob1 loc4 loc16 (1)
put_down_content rob1 box1 nut loc16 wor16_1 (1)
move rob1 loc16 loc4 (1)
move rob1 loc4 central_warehouse (1)
pick_up_content_at_cw rob1 box1 nut (1)
move rob1 central_warehouse loc4 (1)
put_down_content rob1 box1 nut loc4 wor4_1 (1)
move rob1 loc4 central_warehouse (1)
pick_up_content_at_cw rob1 box1 tool (1)
move rob1 central_warehouse loc1 (1)
move rob1 loc1 loc7 (1)
put_down_content rob1 box1 tool loc7 wor7_1 (1)
move rob1 loc7 loc1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 nut (1)
move rob1 central_warehouse loc2 (1)
move rob1 loc2 loc10 (1)
put_down_content rob1 box1 nut loc10 wor10_1 (1)
move rob1 loc10 loc2 (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box1 tool (1)
move rob1 central_warehouse loc1 (1)
put_down_content rob1 box1 tool loc1 wor1_1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 valve (1)
move rob1 central_warehouse loc2 (1)
move rob1 loc2 loc8 (1)
put_down_content rob1 box1 valve loc8 wor8_1 (1)
move rob1 loc8 loc2 (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box1 tool (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc13 (1)
put_down_content rob1 box1 tool loc13 wor13_1 (1)
move rob1 loc13 loc3 (1)
move rob1 loc3 central_warehouse (1)
pick_up_content_at_cw rob1 box1 valve (1)
move rob1 central_warehouse loc2 (1)
put_down_content rob1 box1 valve loc2 wor2_1 (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box1 bolt (1)
move rob1 central_warehouse loc2 (1)
move rob1 loc2 loc9 (1)
put_down_content rob1 box1 bolt loc9 wor9_1 (1)
move rob1 loc9 loc2 (1)
move rob1 loc2 central_warehouse (1)
pick_up_content_at_cw rob1 box1 bolt (1)
move rob1 central_warehouse loc4 (1)
move rob1 loc4 loc15 (1)
put_down_content rob1 box1 bolt loc15 wor15_1 (1)
move rob1 loc15 loc4 (1)
move rob1 loc4 central_warehouse (1)
pick_up_content_at_cw rob1 box1 gears (1)
move rob1 central_warehouse loc1 (1)
move rob1 loc1 loc6 (1)
put_down_content rob1 box1 gears loc6 wor6_1 (1)
move rob1 loc6 loc1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 gears (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc12 (1)
put_down_content rob1 box1 gears loc12 wor12_1 (1)
move rob1 loc12 loc3 (1)
move rob1 loc3 central_warehouse (1)
pick_up_content_at_cw rob1 box1 valve (1)
move rob1 central_warehouse loc4 (1)
move rob1 loc4 loc14 (1)
put_down_content rob1 box1 valve loc14 wor14_1 (1)
move rob1 loc14 loc4 (1)
move rob1 loc4 central_warehouse (1)
pick_up_content_at_cw rob1 box1 screw (1)
move rob1 central_warehouse loc1 (1)
move rob1 loc1 loc5 (1)
put_down_content rob1 box1 screw loc5 wor5_1 (1)
move rob1 loc5 loc1 (1)
move rob1 loc1 central_warehouse (1)
pick_up_content_at_cw rob1 box1 screw (1)
move rob1 central_warehouse loc3 (1)
move rob1 loc3 loc11 (1)
put_down_content rob1 box1 screw loc11 wor11_1 (1)
[t=0.203801s, 410877728 KB] Plan length: 87 step(s).
[t=0.203801s, 410877728 KB] Plan cost: 87
[t=0.203801s, 410877728 KB] Expanded 354 state(s).
[t=0.203801s, 410877728 KB] Reopened 0 state(s).
[t=0.203801s, 410877728 KB] Evaluated 1310 state(s).
[t=0.203801s, 410877728 KB] Evaluations: 3326
[t=0.203801s, 410877728 KB] Generated 1665 state(s).
[t=0.203801s, 410877728 KB] Dead ends: 0 state(s).
[t=0.203801s, 410877728 KB] Number of registered states: 1310
[t=0.203801s, 410877728 KB] Int hash set load factor: 1310/2048 = 0.639648
[t=0.203801s, 410877728 KB] Int hash set resizes: 11
[t=0.203801s, 410877728 KB] Search time: 0.192159s
[t=0.203801s, 410877728 KB] Total time: 0.203801s
Solution found.
Peak memory: 410877728 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
